cmake_minimum_required (VERSION 3.8)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# For MSVC
add_compile_options("/Zc:__cplusplus")

# Enable Hot Reload for MSVC compilers if supported.
if (POLICY CMP0141)
  cmake_policy(SET CMP0141 NEW)
  set(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT "$<IF:$<AND:$<C_COMPILER_ID:MSVC>,$<CXX_COMPILER_ID:MSVC>>,$<$<CONFIG:Debug,RelWithDebInfo>:EditAndContinue>,$<$<CONFIG:Debug,RelWithDebInfo>:ProgramDatabase>>")
endif()

cmake_policy(SET CMP0167 NEW)

# Disables conflicting min/max macros in Windows.h
add_compile_definitions(NOMINMAX)
add_compile_definitions(WIN32_LEAN_AND_MEAN)
add_compile_definitions(NOSOCKETTYPE)
add_compile_definitions(_DISABLE_CONSTEXPR_MUTEX_CONSTRUCTOR)
add_compile_definitions(_WIN32_WINNT=0x0A00)

# Project Vars
set(PROJECT_NAME "NiflyReproducibles")

project(${PROJECT_NAME})

# Externals
add_subdirectory(nifly)

# Ensure CASE_NAME is defined
if(NOT DEFINED CASE_NAME)
    message(FATAL_ERROR "CASE_NAME is not defined. Pass -DCASE_NAME=<name> to CMake.")
endif()

# Add Files
file(GLOB_RECURSE SOURCES CONFIGURE_DEPENDS reproducibles/${CASE_NAME}/main.cpp)

if(SOURCES STREQUAL "")
    message(FATAL_ERROR "No source file found for CASE_NAME='${CASE_NAME}'. Expected reproducibles/${CASE_NAME}/main.cpp")
endif()

add_executable(${PROJECT_NAME}
    ${SOURCES}
)

target_link_libraries(${PROJECT_NAME} PRIVATE
    nifly
)
